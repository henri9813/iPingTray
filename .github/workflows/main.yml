name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  windows-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - run: go build -o ipingtray.exe

      - name: Set up NSIS
        run: choco install nsis

      - name: Create installer
        run: |
          cp build/windows/installer.nsi .
          & "C:\Program Files (x86)\NSIS\makensis.exe" "installer.nsi"

      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: iPingTray-setup.exe
          path: iPingTray-setup.exe

  macos-build:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - run: go build -o ipingtray
      - run: go install github.com/machinebox/appify@latest

      - name: Create macOS app
        run: |
          appify -name "IPingTray" -icon docs/icon.png ipingtray
          cp build/macos/Info.plist IpingTray.app/Contents/Info.plist

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Prepare DMG
        run: |
          mkdir dmg
          mv iPingTray.app dmg/iPingTray.app
          ln -s /Applications dmg/Applications
          create-dmg iPingTray.dmg dmg

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: iPingTray.dmg
          path: iPingTray.dmg

  release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    needs:
      - macos-build
      - windows-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: dist

      - run: find .
      - uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: "configure semantic-release"
        run: npm install -D semantic-release @semantic-release/github

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}