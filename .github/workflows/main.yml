name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  macos-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-13, macos-14 ]
    steps:
      - name: Determine architecture
        id: architecture
        run: echo "arch=$(uname -m)" >> "${GITHUB_ENV}"

      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - run: go build -o ipingtray
      - run: go install github.com/machinebox/appify@latest

      - name: Create macOS app
        run: appify -name "IPingTray" -icon docs/icon.png ipingtray

      - name: Prepare DMG
        run: mkdir dmg && mv IPingTray.app dmg/ && ln -s /Applications dmg/Applications

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG
        run: create-dmg IPingTray.dmg dmg

      - name: Upload DMG artifact
        uses: actions/upload-artifact@v4
        with:
          name: ipingtray-${{ env.arch  }}.dmg
          path: IPingTray.dmg

  release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    needs:
      - macos-build

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          cache: npm
          node-version: lts/*

      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: "configure semantic-release"
        run: |
          npm install @semantic-release/github -D
          cat <<EOF > .releaserc.yml
          branches:
            - 'main'
          plugins:
            - '@semantic-release/commit-analyzer'
            - '@semantic-release/release-notes-generator'
            - '@semantic-release/github'
            - '@semantic-release/changelog'
            - "@semantic-release/git":
                message: "chore(release): v\${nextRelease.version}\n\n\${nextRelease.notes}"
            - "@semantic-release/github":
              assets:
                - path: dist/*
                    
            
            
            
            
            
            
            
            
            
            
            
          publish:
            - '@semantic-release/gitlab'
          verifyConditions:
            - '@semantic-release/gitlab'
          success: false
          fail: false
          npmPublish: false

          EOF
      - run: npm clean-install
      - run: corepack npm audit signatures
      - run: npx semantic-release@24.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}